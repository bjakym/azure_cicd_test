name: 'Azure Terraform'

on: [push, pull_request]

jobs:
  get_changed_files:
    name: 'Get changed files'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      pushed_chg_files: ${{ steps.transform.outputs.directories }}

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # - name: Install python
    #   uses: actions/setup-python@v5
    #   with:
    #     python-version: '3.10' 

    - name: Get all changed files  
      id: files
      uses: masesgroup/retrieve-changed-files@v3

    - name: Transform to directories
      id: transform
      continue-on-error: false
      run: |
        folders=()
        for f in ${{ steps.files.outputs.added_modified }}; \
          do \
            echo "Adding $(dirname $f) to folders"; \
            folders+=($(dirname $f)); \
        done
        unique_folders=($(printf "%s\n" "${folders[@]}" | sort -u | tr '\n' ' '))
        echo "directories=$(jq --compact-output --null-input '$ARGS.positional' --args -- ${unique_folders[@]})"
        echo "directories=$(jq --compact-output --null-input '$ARGS.positional' --args -- ${unique_folders[@]})" >> $GITHUB_OUTPUT

    # - name: Store all changed files
    #   id: store
    #   run: |
    #     pushed_chg_files=""
    #     for changed_file in ${{ steps.files.outputs.added_modified }}; do
    #       if [ "${pushed_chg_files}" == "" ]; then
    #         pushed_chg_files="\"${changed_file}\""
    #       else
    #         pushed_chg_files="${pushed_chg_files}, \"${changed_file}\""
    #       fi
    #     done
    #     echo "pushed_chg_files=${pushed_chg_files}" >> "$GITHUB_OUTPUT"

  # terraform-seq:
  #   name: 'Run Terraform Seq'
  #   needs: get_changed_files
  #   runs-on: ubuntu-latest

  #   defaults:
  #     run:
  #       shell: bash

  #   steps:

  #   - name: Terraform Init
  #     run: |
  #       for changed_file in ${{ needs.get_changed_files.outputs.pushed_chg_files }}; do
  #         echo "Do terraform init with ${changed_file}."
  #       done

  #   - name: Terraform Validate
  #     run: |
  #       for changed_file in ${{ needs.get_changed_files.outputs.pushed_chg_files }}; do
  #         echo "Do terraform validate with ${changed_file}."
  #       done

  terraform-par:
    name: 'Run Terraform Par'
    needs: get_changed_files
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        # tf_folder: ${{ needs.get_changed_files.outputs.pushed_chg_files }}
        tf_folder: ${{ fromJSON(needs.get_changed_files.outputs.directories) }}
 
    steps:

    - name: Terraform Init
      run: |
        echo "Do terraform init with ${{ matrix.tf_folder }}"

    - name: Terraform Validate
      run: |
        echo "Do terraform validate with ${{ matrix.tf_folder }}"
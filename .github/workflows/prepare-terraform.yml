name: 'Prepare Terraform'

# on:
#   workflow_dispatch:

on: 
  push:
    paths:
      - 'infra/**'
  pull_request:
    paths:
      - 'infra/**'

defaults:
  run:
    shell: bash

jobs:
  detect_tf_folders:
    name: 'Detect Committed TF Folders'
    runs-on: azure-cicd
    outputs:
      tf_folders: ${{ steps.tfdirs_set.outputs.dirs }}

    steps:
    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v2

    # Get changed *.tf files and filter only unique directories for these files
    - name: Get Changed Terraform Folders
      id: tfdirs
      uses: tj-actions/changed-files@v41
      with:
        base_sha: ${{ github.event.pull_request.base.sha }}
        files: |
            **.tf
        files_ignore:
            backend/**.tf
        dir_names: true

    # Pass detected TF folder to the next job for ordering
    - name: Set Changed Terraform Folders
      id: tfdirs_set
      run: |
        folders_list=$(echo "${{ steps.tfdirs.outputs.all_changed_files }}" | tr '\\' '/')
        # folders_list="projects/EU1/eu1-t0-dr-shared-002/customers/eu1-t1-dr-002-394/102-nats projects/EU1/eu1-t0-dr-shared-002/customers/eu1-t1-dr-002-395/102-nats projects/EU1/eu1-t0-dr-shared-002/customers/eu1-t1-dr-002-395/101-dres projects/EU1/eu1-t0-dr-shared-002/customers/eu1-t1-dr-002-394/101-dres projects/EU1/eu1-t0-dr-shared-002/104-gw-dfw projects/EU1/Inventory/201-groups"
        echo "dirs=${folders_list}"
        echo "dirs=${folders_list}" >> $GITHUB_OUTPUT

  order_tf_folders:
    name: 'Order TF Folders'
    needs: [detect_tf_folders]
    runs-on: azure-cicd
    outputs:
      ordered_tf_folders: ${{ steps.tfdirs_order.outputs.ordered_dirs }}

    steps:
    # Perform Ordering of TF folders
    - name: Perform Ordering
      id: tfdirs_order
      working-directory: .github/scripts
      run: |
        ordered_dirs=$(python tf_order_by_change.py "${{ needs.detect_tf_folders.outputs.tf_folders }}")
        echo "ordered_dirs=${ordered_dirs}"
        echo "ordered_dirs=${ordered_dirs}" >> $GITHUB_OUTPUT

  terraform_flow:
    name: 'Execute Terraform Flow'
    needs: [order_tf_folders]
    strategy:
      matrix:
        folders_string_list: ${{ fromJSON(needs.order_tf_folders.outputs.ordered_tf_folders) }}
      fail-fast: true
      max-parallel: 1
    uses: ./.github/workflows/terraform-flow.yml
    with:
      folders_string: ${{ matrix.folders_string_list }}
    secrets: inherit